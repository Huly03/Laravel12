<?php

use App\Http\Controllers\Auth\LoginController;
use Illuminate\Support\Facades\Route;
use Illuminate\Support\Facades\Auth;
use App\Http\Controllers\Auth\RegisterController;
use App\Http\Controllers\HomeController;
use App\Http\Controllers\AdminController;
use App\Http\Controllers\UserController;
use App\Http\Controllers\ApiController;
use App\Http\Controllers\HeaderController;
use App\Http\Controllers\ArchitectureController;
use App\Http\Controllers\ProjectController;
use App\Http\Controllers\AccountController;
use App\Http\Controllers\ApiCallController;
use App\Http\Controllers\ArchitectureStyleController;
use App\Http\Controllers\UserAccountController;
use App\Http\Controllers\ImageController;
use App\Http\Controllers\ModelController;



Route::get('/model-selection', [ModelController::class, 'showForm'])->name('model-selection');
Route::post('/model-selection', [ModelController::class, 'submitSelection']);
Route::get('/model-use/{id}', [ModelController::class, 'useModel'])->name('useModel');
Route::get('/model-delete/{id}', [ModelController::class, 'deleteModel'])->name('deleteModel');



Route::put('/users/{id}', [UserController::class, 'update'])->name('updateUser');
Route::delete('/users/{id}', [UserController::class, 'destroy'])->name('deleteUser');

// Route ƒë·ªÉ hi·ªÉn th·ªã ·∫£nh c·ªßa ng∆∞·ªùi d√πng
Route::get('/ketqua', [ImageController::class, 'index'])->name('images.index');
Route::delete('/ketqua', [ArchitectureStyleController::class, 'deleteImage'])->name('deleteImage');


Route::middleware(['auth'])->group(function () {
    Route::get('/users', [UserAccountController::class, 'index'])->name('users.index'); // T·∫•t c·∫£ users
    Route::get('/my-account', [UserAccountController::class, 'profile'])->name('my.account'); // Ng∆∞·ªùi d√πng hi·ªán t·∫°i
    Route::post('/my-account/update', [UserAccountController::class, 'updateProfile'])->name('my.account.update');
});

// üìÑ Hi·ªÉn th·ªã th√¥ng tin t√†i kho·∫£n
Route::get('/user/account/profile', [AccountController::class, 'profile'])->name('account.profile')->middleware('auth');
Route::resource('/user/account', AccountController::class)->only(['show', 'update']);

// ‚úèÔ∏è C·∫≠p nh·∫≠t th√¥ng tin t√†i kho·∫£n (chu·∫©n REST ‚Üí d√πng PUT)
Route::put('/user/account/profile', [AccountController::class, 'updateAccount'])->name('account.update')->middleware('auth');

Route::get('/user/projects', [ProjectController::class, 'index'])->name('project.index');

Route::get('/user/architectures/view/{id}', [ArchitectureController::class, 'showDetail'])->name('architecture.detail');

Route::get('/user/architectures/view', [ArchitectureController::class, 'viewOnly'])->name('architecture.viewOnly');

Route::get('/result', [ArchitectureStyleController::class, 'showImages'])->name('images');
Route::get('/result/edit/{id}', [ArchitectureStyleController::class, 'editImage'])->name('editImage');
Route::put('/result/{id}', [ArchitectureStyleController::class, 'updateImage'])->name('updateImage');
Route::delete('/result/{id}', [ArchitectureStyleController::class, 'deleteImage'])->name('deleteImage');

Route::post('/save-recognition-result', [ArchitectureStyleController::class, 'saveRecognitionResult'])->name('saveRecognitionResult');

Route::resource('apiCalls', ApiCallController::class);
Route::get('/api-calls', [ApiCallController::class, 'index'])->name('api.calls.index');

Route::resource('accounts', AccountController::class);

// Hi·ªÉn th·ªã form th√™m d·ª± √°n
Route::get('/project', [ProjectController::class, 'create'])->name('project.create');
Route::get('/project/{id}/edit', [ProjectController::class, 'edit'])->name('project.edit');
Route::put('/project/{id}', [ProjectController::class, 'update'])->name('project.update');
Route::delete('/project/{id}', [ProjectController::class, 'destroy'])->name('project.destroy');
Route::post('/project', [ProjectController::class, 'store'])->name('projects.store');
// L∆∞u ki·∫øn tr√∫c v√†o c∆° s·ªü d·ªØ li·ªáu
Route::get('architecture', [ArchitectureController::class, 'create'])->name('architecture');
Route::post('architecture', [ArchitectureController::class, 'store']);
Route::get('architecture/{id}', [ArchitectureController::class, 'show'])->name('architecture.show');
Route::get('architecture/{id}/edit', [ArchitectureController::class, 'edit'])->name('architecture.edit');
Route::put('architecture/{id}', [ArchitectureController::class, 'update']);
Route::delete('architecture/{id}', [ArchitectureController::class, 'destroy']);

Route::get('/user/upload', [ApiController::class, 'showFormv2'])->name('uploadFormV2'); // Trang giao di·ªán upload
// G·ª≠i ·∫£nh -> nh·∫≠n k·∫øt qu·∫£ t·ª´ Flask
Route::post('/user/upload', [ApiController::class, 'uploadImageV2'])->name('uploadImageV2');
// Giao di·ªán upload v√† chatbot
Route::middleware('auth')->get('/upload/{id}', [ApiController::class, 'showForm'])->name('uploadForm');
Route::middleware('auth')->post('/upload/{id}', [ApiController::class, 'uploadImage'])->name('uploadImage');

// G·ª≠i c√¢u h·ªèi cho chatbot
Route::post('/chatbot', [ApiController::class, 'chatWithBot'])->name('chatWithBot');
// T√¨m ki·∫øm
Route::post('/search', [ApiController::class, 'searchQuery'])->name('searchQuery');
Route::post('/search', [HeaderController::class, 'searchQuery'])->name('searchQuery');
// Trang ch·ªß
Route::get('/', [HomeController::class, 'index'])->name('home');
// Route ƒëƒÉng k√Ω
Route::get('/register', [RegisterController::class, 'showForm'])->name('register');
Route::post('/register', [RegisterController::class, 'register'])->name('register.store');
// Route ƒëƒÉng nh·∫≠p
Route::get('/login', [LoginController::class, 'showForm'])->name('login.show');
Route::post('/login', [LoginController::class, 'login'])->name('login.store');
Route::get('/logout', [LoginController::class, 'logout'])->name('logout');

// Route ph√¢n quy·ªÅn
// Route d√†nh cho trang admin
Route::get('/admin', [AdminController::class, 'index'])->name('admin.dashboard')->middleware('auth');

Route::get('/user', [UserController::class, 'index'])->name('user.dashboard')->middleware('auth');
// Route cho trang kh√¥ng t√¨m th·∫•y (404)
Route::fallback(function () {
    return view('404'); // Trang l·ªói 404
});
